[migrate]

# Path to scenario file to be used for migration. 'scenario/migrate.yaml' by default
scenario = scenario/migrate.yaml

# Path to tasks mapping file. 'scenario/tasks.yaml' by default
tasks_mapping = scenario/tasks.yaml

keep_user_passwords = False
ssh_transfer_port = 9990-9999
key_filename = <path to ssh private key>
keep_ip = yes
ext_net_map = configs/ext_net_map.yaml
keep_floatingip = yes
keep_volume_storage = False
speed_limit = 100MB
instances = key_name-qwerty
file_compression = gzip
level_compression = 9
overwrite_user_passwords = False
migrate_quotas = False
migrate_users = True
direct_compute_transfer = True
filter_path = configs/filter.yaml
keep_lbaas = no
ssh_chunk_size = 100
retry = 5
migrate_extnets = True
time_wait = 5
group_file_path = configs/grouping_result.yaml
cinder_migration_strategy = cloudferrylib.os.storage.cinder_storage.CinderStorage
migrate_user_quotas = False

# If set to True removes unreachable compute hosts from `nova hypervisor-list`.
# Set to False only if you're 100% sure there are no hosts down in the cloud.
skip_down_hosts = True

# Backend used for doing live migration inside a cloud. Used by evacuation chain.
# "nova" by default. Other possible option - "cobalt". Raises error in case
# set to any other value.
incloud_live_migration = nova
path_tasks = scenario/tasks.yaml
path_scenario = scenario/migrate.yaml

[mail]
server = <server_name:port_number>
username = <username>
password = <password>
from_addr = <e-mail address>

[src]
type = os
auth_url = <src_auth_url>
host = <src_api_host>
ssh_host = <src_ssh_host>
ssh_user = <src_ssh_user>
ssh_sudo_password = <src_ssh_sudo_password>
ext_cidr = <src_external_net_cidr>
user = admin
password = admin
tenant = admin
temp = /root/temp

#"service_tenant" is the name for Tenant used by openstack services. (Optional)
#By default CloudFerry takes following value for service tenant name: "service".
#In some cases (e.g Mirantis Openstack) the service tenant name can be different.
#To verify if value is different from default run : "keystone tenant-list | grep service"
service_tenant = service

[src_mysql]
db_user = root
db_password =
db_host = <src_mysql_host>
db_port = 3306
db_connection = mysql+mysqlconnector

[src_rabbit]
user = <rabbit_user>
password = <rabbit_password>
hosts = <rabbit_hosts>

[src_compute]
service = nova
backend = iscsi
convert_diff_file = qcow2
convert_ephemeral_disk = qcow2
host_eph_drv = <src_host_epehem_drv>
block_migration = True
disk_overcommit = False
db_connection = mysql+mysqlconnector
db_host = <nova_db_host>
db_port = 3306
db_name = nova
db_user = <nova_db_user>
db_password = <nova_db_password>

[src_storage]
service = cinder
backend = ceph
db_host = <src_ceph_storage_host>
db_port = 3306
db_connection = mysql+mysqlconnector
db_user = <cinder_database_username>
db_password = <cinder_database_password>
db_name = <cinder_database_name>
# protocol_transfer=GLANCE ; or SSH
protocol_transfer = SSH
disk_format = qcow2
# Ceph
# volume_name_template=volume-
# rbd_pool=volumes

[src_image]
service = glance
backend = swift
db_host = <glance_db_host>
db_port = 3306
db_connection = mysql+mysqlconnector
db_user = <glance_db_user>
db_password = <glance_db_password>
db_name = glance

[src_identity]
service = keystone

[src_network]
service = auto

[src_objstorage]
service = swift

[dst]
type = os
auth_url = <src_auth_url>
host = <dst_api_host>
ssh_host = <dst_ssh_host>
ssh_user = <dst_ssh_user>
ssh_sudo_password = <dst_ssh_sudo_password>
ext_cidr = <dst_external_net_cidr>
user = admin
password = admin
tenant = admin
temp = /root/merge

#"service_tenant" is the name for Tenant used by openstack services. (Optional)
#By default CloudFerry takes following value for service tenant name: "service".
#In some cases (e.g Mirantis Openstack) the service tenant name can be different.
#To verify if value is different from default run : "keystone tenant-list | grep service"
service_tenant = service

[dst_mysql]
db_user = root
db_password =
db_host = <dst_mysql_host>
db_port = 3306
db_connection = mysql+mysqlconnector

[dst_rabbit]
user = <rabbit_user>
password = <rabbit_password>
hosts = <rabbit_hosts>

[dst_compute]
service = nova
backend = iscsi
convert_diff_file = qcow2
convert_ephemeral_disk = qcow2
host_eph_drv = <dst_host_epehem_drv>
cpu_allocation_ratio = 16
ram_allocation_ratio = 1
disk_allocation_ratio = 0.9
block_migration = True
disk_overcommit = False
db_connection = mysql+mysqlconnector
db_host = <nova_db_host>
db_port = 3306
db_name = nova
db_user = <nova_db_user>
db_password = <nova_db_password>

[dst_storage]
service = cinder
backend = ceph
db_host = <dst_ceph_storage_host>
db_port = 3306
db_connection = mysql+mysqlconnector
db_user = <cinder_database_username>
db_password = <cinder_database_password>
db_name = <cinder_database_name>
# Ceph
# volume_name_template=volume-
# rbd_pool=volumes

[dst_image]
service = glance
convert_to_raw = False
backend = swift
db_host = <glance_db_host>
db_port = 3306
db_connection = mysql+mysqlconnector
db_user = <glance_db_user>
db_password = <glance_db_password>
db_name = glance

[dst_identity]
service = keystone

[dst_network]
service = auto

[dst_objstorage]
service = swift

[import_rules]
key = {name:dest-key-1}

[snapshot]
snapshot_path = dump.sql

[initial_check]
claimed_bandwidth = 100
factor = 0.5
test_file_size = 1024

[condense]
nova_file=
group_file=
node_file=

[database]
host = localhost
port = 6379
